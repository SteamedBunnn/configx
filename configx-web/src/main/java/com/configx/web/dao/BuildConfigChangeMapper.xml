<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.configx.web.dao.BuildConfigChangeMapper">
  <resultMap id="BaseResultMap" type="com.configx.web.model.BuildConfigChange">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="build_id" jdbcType="BIGINT" property="buildId" />
    <result column="app_id" jdbcType="INTEGER" property="appId" />
    <result column="app_name" jdbcType="VARCHAR" property="appName" />
    <result column="env_id" jdbcType="INTEGER" property="envId" />
    <result column="env_name" jdbcType="VARCHAR" property="envName" />
    <result column="profile_id" jdbcType="INTEGER" property="profileId" />
    <result column="profile_name" jdbcType="VARCHAR" property="profileName" />
    <result column="config_id" jdbcType="BIGINT" property="configId" />
    <result column="config_name" jdbcType="VARCHAR" property="configName" />
  </resultMap>
  <insert id="insert" parameterType="com.configx.web.model.BuildConfigChange">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `build_config_change` (build_id, app_id, app_name, 
      env_id, env_name, profile_id, 
      profile_name, config_id, config_name
      )
    values (#{buildId,jdbcType=BIGINT}, #{appId,jdbcType=INTEGER}, #{appName,jdbcType=VARCHAR}, 
      #{envId,jdbcType=INTEGER}, #{envName,jdbcType=VARCHAR}, #{profileId,jdbcType=INTEGER}, 
      #{profileName,jdbcType=VARCHAR}, #{configId,jdbcType=BIGINT}, #{configName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.configx.web.model.BuildConfigChange">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `build_config_change`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="buildId != null">
        build_id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="appName != null">
        app_name,
      </if>
      <if test="envId != null">
        env_id,
      </if>
      <if test="envName != null">
        env_name,
      </if>
      <if test="profileId != null">
        profile_id,
      </if>
      <if test="profileName != null">
        profile_name,
      </if>
      <if test="configId != null">
        config_id,
      </if>
      <if test="configName != null">
        config_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="buildId != null">
        #{buildId,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="envId != null">
        #{envId,jdbcType=INTEGER},
      </if>
      <if test="envName != null">
        #{envName,jdbcType=VARCHAR},
      </if>
      <if test="profileId != null">
        #{profileId,jdbcType=INTEGER},
      </if>
      <if test="profileName != null">
        #{profileName,jdbcType=VARCHAR},
      </if>
      <if test="configId != null">
        #{configId,jdbcType=BIGINT},
      </if>
      <if test="configName != null">
        #{configName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <select id="selectChangesByBuildId" resultMap="BaseResultMap">
  <![CDATA[
    select * from `build_config_change` where build_id = #{buildId}
  ]]>
  </select>
  
  <select id="selectChanges" resultMap="BaseResultMap">
  <![CDATA[
  	select * from `build_config_change` where app_id=#{appId} and env_id=#{envId} and build_id > #{lastBuildId} and build_id<=#{buildId}
  ]]>
  </select>
</mapper>