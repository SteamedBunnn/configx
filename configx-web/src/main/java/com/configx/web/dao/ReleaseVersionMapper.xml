<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.configx.web.dao.ReleaseVersionMapper">
  <resultMap id="BaseResultMap" type="com.configx.web.model.ReleaseVersion">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="number" jdbcType="BIGINT" property="number" />
    <result column="app_id" jdbcType="INTEGER" property="appId" />
    <result column="app_name" jdbcType="VARCHAR" property="appName" />
    <result column="env_id" jdbcType="INTEGER" property="envId" />
    <result column="env_name" jdbcType="VARCHAR" property="envName" />
    <result column="build_id" jdbcType="BIGINT" property="buildId" />
    <result column="release_id" jdbcType="BIGINT" property="releaseId" />
    <result column="rollback_id" jdbcType="BIGINT" property="rollbackId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    `number`, app_id, app_name, env_id, env_name, build_id, release_id, rollback_id, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from `release_version`
    where `number` = #{number,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from `release_version`
    where `number` = #{number,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="number" parameterType="com.configx.web.model.ReleaseVersion" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `release_version` (app_id, app_name, env_id, 
      env_name, build_id, release_id, 
      rollback_id, create_time)
    values (#{appId,jdbcType=INTEGER}, #{appName,jdbcType=VARCHAR}, #{envId,jdbcType=INTEGER}, 
      #{envName,jdbcType=VARCHAR}, #{buildId,jdbcType=BIGINT}, #{releaseId,jdbcType=BIGINT}, 
      #{rollbackId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="number" parameterType="com.configx.web.model.ReleaseVersion" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `release_version`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        app_id,
      </if>
      <if test="appName != null">
        app_name,
      </if>
      <if test="envId != null">
        env_id,
      </if>
      <if test="envName != null">
        env_name,
      </if>
      <if test="buildId != null">
        build_id,
      </if>
      <if test="releaseId != null">
        release_id,
      </if>
      <if test="rollbackId != null">
        rollback_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="envId != null">
        #{envId,jdbcType=INTEGER},
      </if>
      <if test="envName != null">
        #{envName,jdbcType=VARCHAR},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=BIGINT},
      </if>
      <if test="releaseId != null">
        #{releaseId,jdbcType=BIGINT},
      </if>
      <if test="rollbackId != null">
        #{rollbackId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.configx.web.model.ReleaseVersion">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `release_version`
    <set>
      <if test="appId != null">
        app_id = #{appId,jdbcType=INTEGER},
      </if>
      <if test="appName != null">
        app_name = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="envId != null">
        env_id = #{envId,jdbcType=INTEGER},
      </if>
      <if test="envName != null">
        env_name = #{envName,jdbcType=VARCHAR},
      </if>
      <if test="buildId != null">
        build_id = #{buildId,jdbcType=BIGINT},
      </if>
      <if test="releaseId != null">
        release_id = #{releaseId,jdbcType=BIGINT},
      </if>
      <if test="rollbackId != null">
        rollback_id = #{rollbackId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where `number` = #{number,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.configx.web.model.ReleaseVersion">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `release_version`
    set app_id = #{appId,jdbcType=INTEGER},
      app_name = #{appName,jdbcType=VARCHAR},
      env_id = #{envId,jdbcType=INTEGER},
      env_name = #{envName,jdbcType=VARCHAR},
      build_id = #{buildId,jdbcType=BIGINT},
      release_id = #{releaseId,jdbcType=BIGINT},
      rollback_id = #{rollbackId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where `number` = #{number,jdbcType=BIGINT}
  </update>
  
  <select id="getVersions" resultMap="BaseResultMap">
    select * from `release_version` where app_id=#{appId} and env_id=#{envId}
  </select>

  <select id="getVersionsBetween" resultMap="BaseResultMap">
    select * from `release_version` where app_id=#{appId} and env_id=#{envId} and (`number` BETWEEN #{fromVerion} and #{toVersion})
  </select>

  <select id="getVersionsByReleaseIdList" resultMap="BaseResultMap">
    select * from `release_version` where release_id IN
    <foreach item="itemId" index="index" collection="list" open="(" separator="," close=")">
      #{itemId}
    </foreach>
  </select>

  <select id="getLatestVersion" resultMap="BaseResultMap">
    select * from `release_version` where app_id=#{appId} and env_id=#{envId} order by `number` desc limit 1
  </select>

</mapper>