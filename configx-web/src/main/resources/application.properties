# ===================================================================
# COMMON SPRING BOOT PROPERTIES
#
# This sample file is provided as a guideline. Do NOT copy it in its
# entirety to your own application. ^^^
# ===================================================================

# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------

# SPRING CONFIG (ConfigFileApplicationListener)
#spring.config.name and spring.config.location are used very early to determine which files have to be loaded so they have to be defined as an environment property (typically OS env, system property or command line argument).
#If you use environment variables rather than system properties, most operating systems disallow period-separated key names, but you can use underscores instead (e.g. SPRING_CONFIG_NAME instead of spring.config.name).
#If you are running in a container then JNDI properties (in java:comp/env) or servlet context initialization parameters can be used instead of, or as well as, environment variables or system properties.
#spring.config.name=application # Config file name.
#spring.config.location=# Config file locations.

# PROFILES
spring.profiles.active=@profileActive@
#spring.profiles.include= # unconditionally activate the specified comma separated profiles

# APPLICATION SETTINGS (SpringApplication)
#spring.main.sources=
#spring.main.web-environment=true\# detect by default
spring.main.show-banner=true
#spring.main....= # see class for all properties


# LOGGING
#logging.config= # Location of the logging configuration file. For instance `classpath:logback.xml` for Logback
#logging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.
#logging.level.*= # levels for loggers, e.g. "logging.level.org.springframework=DEBUG" (TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF)
# Log file name. For instance `myapp.log`
logging.file=spring.log
# Location of the log file. For instance `/var/log`
logging.path=./
#logging.pattern.console= # Appender pattern for output to the console. Only supported with the default logback setup.
#logging.pattern.file= # Appender pattern for output to the file. Only supported with the default logback setup.
#logging.pattern.level= # Appender pattern for log level (default %5p). Only supported with the defaultlogback setup.
# Register a shutdown hook for the logging system when it is initialized.
logging.register-shutdown-hook=true


# OUTPUT
# Configure the ANSI output (can be "detect", "always", "never").
spring.output.ansi.enabled=detect

# IDENTITY (ContextIdApplicationContextInitializer)
spring.application.name=configx
#spring.application.index=
info.version=@project.version@

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
server.port=3964
#server.address= # bind to a specific NIC
#server.session-timeout= # session timeout in seconds
#server.context-parameters.*= # Servlet context init parameters, e.g. server.context-parameters.a=alpha
server.context-path=/
#server.servlet-path= # the servlet path, defaults to '/'


# HTTP encoding (HttpEncodingProperties)
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true


# FREEMARKER (FreeMarkerAutoConfiguration)
spring.freemarker.allow-request-override=false
spring.freemarker.cache=false
spring.freemarker.check-template-location=true
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=true
spring.freemarker.expose-session-attributes=true
spring.freemarker.expose-spring-macro-helpers=true
spring.freemarker.prefix=
spring.freemarker.request-context-attribute=rc
spring.freemarker.settings.number_format=#
spring.freemarker.suffix=.ftl
spring.freemarker.template-loader-path=classpath:/templates/,classpath:/freemarker/,/WEB-INF/freemarker/
#spring.freemarker.view-names= # whitelist of view names that can be resolved


# INTERNATIONALIZATION (MessageSourceAutoConfiguration)
spring.messages.basename=messages
spring.messages.cache-seconds=-1
spring.messages.encoding=UTF-8


# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.name= # name of the data source
#spring.datasource.initialize=true # populate using data.sql
#spring.datasource.schema= # a schema (DDL) script resource reference
#spring.datasource.data= # a data (DML) script resource reference
#spring.datasource.sql-script-encoding= # a charset for reading SQL scripts
#spring.datasource.platform= # the platform to use in the schema resource (schema-${platform}.sql)
#spring.datasource.continue-on-error=false # continue even if can't be initialized
#spring.datasource.separator=; # statement separator in SQL initialization scripts
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/configx?rewriteBatchedStatements=true&useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=
#spring.datasource.jndi-name= # For JNDI lookup (class, url, username & password are ignored when set)
spring.datasource.max-active=300
spring.datasource.max-idle=10
spring.datasource.min-idle=1
spring.datasource.initial-size=1
spring.datasource.validation-query=SELECT 1
spring.datasource.test-on-borrow=true
spring.datasource.test-on-return=false
spring.datasource.test-while-idle=true
spring.datasource.time-between-eviction-runs-millis=3600000
spring.datasource.min-evictable-idle-time-millis=18000000
spring.datasource.max-wait=1000
spring.datasource.jmx-enabled=false


# DAO (PersistenceExceptionTranslationAutoConfiguration)
spring.dao.exceptiontranslation.enabled=true



